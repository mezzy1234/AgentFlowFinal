{
  "info": {
    "name": "AgentFlow.AI Production API",
    "description": "Complete API collection for AgentFlow.AI - SaaS platform for AI automation agents",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{api_key}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "https://agentflow.ai",
      "type": "string"
    },
    {
      "key": "api_key",
      "value": "ak_your_api_key_here",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "your_user_id_here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "ü§ñ Agent Management",
      "item": [
        {
          "name": "List Agents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/agents?user_id={{user_id}}&category=productivity&is_public=true",
              "host": ["{{base_url}}"],
              "path": ["api", "agents"],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "category",
                  "value": "productivity"
                },
                {
                  "key": "is_public",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Agent Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/agents/{{agent_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "agents", "{{agent_id}}"]
            }
          }
        },
        {
          "name": "Execute Agent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"agent_id\": \"{{agent_id}}\",\n  \"user_id\": \"{{user_id}}\",\n  \"input_data\": {\n    \"message\": \"Hello from API\",\n    \"channel\": \"#general\"\n  },\n  \"trigger_type\": \"api\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/agent-orchestrator",
              "host": ["{{base_url}}"],
              "path": ["api", "agent-orchestrator"]
            }
          }
        },
        {
          "name": "Upload Agent (JSON)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/agent.json"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}",
                  "type": "text"
                },
                {
                  "key": "action",
                  "value": "upload",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/agent-uploader",
              "host": ["{{base_url}}"],
              "path": ["api", "agent-uploader"]
            }
          }
        },
        {
          "name": "Test Agent Locally",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"run_local_test\",\n  \"user_id\": \"{{user_id}}\",\n  \"agent_config\": {\n    \"name\": \"Test Agent\",\n    \"triggers\": [\n      {\n        \"type\": \"webhook\",\n        \"url\": \"https://webhook.site/test\"\n      }\n    ],\n    \"actions\": [\n      {\n        \"type\": \"slack\",\n        \"service\": \"slack\",\n        \"action\": \"send_message\"\n      }\n    ]\n  },\n  \"test_data\": {\n    \"webhook_payload\": {\n      \"message\": \"Test message\"\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/agent-testing-cli",
              "host": ["{{base_url}}"],
              "path": ["api", "agent-testing-cli"]
            }
          }
        }
      ]
    },
    {
      "name": "üîê Authentication & OAuth",
      "item": [
        {
          "name": "Generate API Key",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"generate\",\n  \"user_id\": \"{{user_id}}\",\n  \"name\": \"Production API Key\",\n  \"permissions\": [\n    {\n      \"resource\": \"agents\",\n      \"actions\": [\"read\", \"execute\"]\n    },\n    {\n      \"resource\": \"executions\",\n      \"actions\": [\"read\"]\n    }\n  ],\n  \"options\": {\n    \"rate_limits\": {\n      \"requests_per_minute\": 100,\n      \"requests_per_hour\": 5000\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/api-keys",
              "host": ["{{base_url}}"],
              "path": ["api", "api-keys"]
            }
          }
        },
        {
          "name": "Initiate OAuth",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"initiate_oauth\",\n  \"provider\": \"slack\",\n  \"user_id\": \"{{user_id}}\",\n  \"redirect_uri\": \"{{base_url}}/oauth/callback\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/multi-oauth",
              "host": ["{{base_url}}"],
              "path": ["api", "multi-oauth"]
            }
          }
        },
        {
          "name": "List OAuth Providers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/multi-oauth?type=providers&category=communication",
              "host": ["{{base_url}}"],
              "path": ["api", "multi-oauth"],
              "query": [
                {
                  "key": "type",
                  "value": "providers"
                },
                {
                  "key": "category",
                  "value": "communication"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìä Analytics & Logging",
      "item": [
        {
          "name": "Get Execution Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/execution-logging?type=execution_logs&user_id={{user_id}}&limit=50",
              "host": ["{{base_url}}"],
              "path": ["api", "execution-logging"],
              "query": [
                {
                  "key": "type",
                  "value": "execution_logs"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          }
        },
        {
          "name": "Get Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/execution-logging?type=analytics&user_id={{user_id}}&timeframe=7d",
              "host": ["{{base_url}}"],
              "path": ["api", "execution-logging"],
              "query": [
                {
                  "key": "type",
                  "value": "analytics"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "timeframe",
                  "value": "7d"
                }
              ]
            }
          }
        },
        {
          "name": "Export Logs (CSV)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/execution-logging?type=export&user_id={{user_id}}&format=csv&start_date=2025-01-01",
              "host": ["{{base_url}}"],
              "path": ["api", "execution-logging"],
              "query": [
                {
                  "key": "type",
                  "value": "export"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "format",
                  "value": "csv"
                },
                {
                  "key": "start_date",
                  "value": "2025-01-01"
                }
              ]
            }
          }
        },
        {
          "name": "Agent Metadata Inspector",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/agent-metadata?type=metadata&agent_id={{agent_id}}&user_id={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "agent-metadata"],
              "query": [
                {
                  "key": "type",
                  "value": "metadata"
                },
                {
                  "key": "agent_id",
                  "value": "{{agent_id}}"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Debug Agent",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/agent-metadata?type=debug&agent_id={{agent_id}}&user_id={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "agent-metadata"],
              "query": [
                {
                  "key": "type",
                  "value": "debug"
                },
                {
                  "key": "agent_id",
                  "value": "{{agent_id}}"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üë§ Developer Profiles",
      "item": [
        {
          "name": "Get Developer Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/developer-profiles?type=profile&identifier=username123",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-profiles"],
              "query": [
                {
                  "key": "type",
                  "value": "profile"
                },
                {
                  "key": "identifier",
                  "value": "username123"
                }
              ]
            }
          }
        },
        {
          "name": "Create Developer Profile",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"create_profile\",\n  \"user_id\": \"{{user_id}}\",\n  \"profile_data\": {\n    \"username\": \"awesome_dev\",\n    \"display_name\": \"Awesome Developer\",\n    \"bio\": \"Building amazing AI automation agents\",\n    \"skills\": [\"JavaScript\", \"Python\", \"AI\", \"Automation\"],\n    \"specializations\": [\"productivity\", \"communication\"],\n    \"show_revenue\": false,\n    \"location\": \"San Francisco, CA\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/developer-profiles",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-profiles"]
            }
          }
        },
        {
          "name": "Follow Developer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"follow\",\n  \"follower_id\": \"{{user_id}}\",\n  \"following_id\": \"target_user_id_here\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/developer-profiles",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-profiles"]
            }
          }
        },
        {
          "name": "Search Developers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/developer-profiles?type=search&query=automation&specialization=productivity&sort_by=followers",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-profiles"],
              "query": [
                {
                  "key": "type",
                  "value": "search"
                },
                {
                  "key": "query",
                  "value": "automation"
                },
                {
                  "key": "specialization",
                  "value": "productivity"
                },
                {
                  "key": "sort_by",
                  "value": "followers"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üìã GDPR Compliance",
      "item": [
        {
          "name": "Request Data Export",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"request_export\",\n  \"user_id\": \"{{user_id}}\",\n  \"export_type\": \"full_export\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/gdpr-compliance",
              "host": ["{{base_url}}"],
              "path": ["api", "gdpr-compliance"]
            }
          }
        },
        {
          "name": "Request Data Deletion",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"request_deletion\",\n  \"user_id\": \"{{user_id}}\",\n  \"deletion_type\": \"specific_data\",\n  \"data_categories\": [\"logs\", \"integrations\"],\n  \"retain_financial\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/gdpr-compliance",
              "host": ["{{base_url}}"],
              "path": ["api", "gdpr-compliance"]
            }
          }
        },
        {
          "name": "Get Compliance Report",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/gdpr-compliance?type=compliance_report&user_id={{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "gdpr-compliance"],
              "query": [
                {
                  "key": "type",
                  "value": "compliance_report"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                }
              ]
            }
          }
        },
        {
          "name": "Record Consent",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"record_consent\",\n  \"user_id\": \"{{user_id}}\",\n  \"consent_type\": \"privacy_policy\",\n  \"status\": \"granted\",\n  \"version\": \"1.0.0\",\n  \"ip_address\": \"192.168.1.1\",\n  \"user_agent\": \"Mozilla/5.0...\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/gdpr-compliance",
              "host": ["{{base_url}}"],
              "path": ["api", "gdpr-compliance"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß System Management",
      "item": [
        {
          "name": "Test Backup Restore",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"test_backup_restore\",\n  \"test_type\": \"full_system\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/system-error-handler",
              "host": ["{{base_url}}"],
              "path": ["api", "system-error-handler"]
            }
          }
        },
        {
          "name": "Get System Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/system-error-handler?type=system_health",
              "host": ["{{base_url}}"],
              "path": ["api", "system-error-handler"],
              "query": [
                {
                  "key": "type",
                  "value": "system_health"
                }
              ]
            }
          }
        },
        {
          "name": "Cleanup Placeholders",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"cleanup_placeholders\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/system-error-handler",
              "host": ["{{base_url}}"],
              "path": ["api", "system-error-handler"]
            }
          }
        },
        {
          "name": "Get Error Reports",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/system-error-handler?type=error_reports&severity=high&status=open",
              "host": ["{{base_url}}"],
              "path": ["api", "system-error-handler"],
              "query": [
                {
                  "key": "type",
                  "value": "error_reports"
                },
                {
                  "key": "severity",
                  "value": "high"
                },
                {
                  "key": "status",
                  "value": "open"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "üí∞ Revenue & Earnings",
      "item": [
        {
          "name": "Get Developer Earnings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/developer-earnings?type=earnings&user_id={{user_id}}&timeframe=30d",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-earnings"],
              "query": [
                {
                  "key": "type",
                  "value": "earnings"
                },
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "timeframe",
                  "value": "30d"
                }
              ]
            }
          }
        },
        {
          "name": "Request Payout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"request_payout\",\n  \"user_id\": \"{{user_id}}\",\n  \"amount\": 100.00,\n  \"payout_method\": \"stripe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/developer-earnings",
              "host": ["{{base_url}}"],
              "path": ["api", "developer-earnings"]
            }
          }
        }
      ]
    },
    {
      "name": "üîó Integrations",
      "item": [
        {
          "name": "Get User Integrations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/integrations?user_id={{user_id}}&status=connected",
              "host": ["{{base_url}}"],
              "path": ["api", "integrations"],
              "query": [
                {
                  "key": "user_id",
                  "value": "{{user_id}}"
                },
                {
                  "key": "status",
                  "value": "connected"
                }
              ]
            }
          }
        },
        {
          "name": "Test Integration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"action\": \"test_connection\",\n  \"user_id\": \"{{user_id}}\",\n  \"service_name\": \"slack\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/integrations",
              "host": ["{{base_url}}"],
              "path": ["api", "integrations"]
            }
          }
        }
      ]
    },
    {
      "name": "üìà Monitoring",
      "item": [
        {
          "name": "Get Integration Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/integration-health?type=health_check&services=slack,gmail,discord",
              "host": ["{{base_url}}"],
              "path": ["api", "integration-health"],
              "query": [
                {
                  "key": "type",
                  "value": "health_check"
                },
                {
                  "key": "services",
                  "value": "slack,gmail,discord"
                }
              ]
            }
          }
        },
        {
          "name": "Get System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/monitoring?type=system_metrics&timeframe=1h",
              "host": ["{{base_url}}"],
              "path": ["api", "monitoring"],
              "query": [
                {
                  "key": "type",
                  "value": "system_metrics"
                },
                {
                  "key": "timeframe",
                  "value": "1h"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Pre-request script to set authentication headers",
          "if (pm.collectionVariables.get('api_key')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + pm.collectionVariables.get('api_key')",
          "    });",
          "}"
        ],
        "type": "text/javascript"
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// Global test script for all requests",
          "pm.test('Status code is success', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "pm.test('Response has success field', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success');",
          "});",
          "",
          "pm.test('Response time is acceptable', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});"
        ],
        "type": "text/javascript"
      }
    }
  ]
}
